webhook-created: &webhook-created
    name: Webhook created
    command: |
        curl $BUILD_STATUS_URL\?flow\=circleci-created -d '{"repository":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_number":"'"$CIRCLE_BUILD_NUM"'","build_url":"'"$CIRCLE_BUILD_URL"'"}' -H "Content-Type: application/json" -X POST -i || true
webhook-failed: &webhook-failed
    name: Webhook completed
    when: on_fail
    command: |
        curl $BUILD_STATUS_URL\?flow\=circleci-completed\&status\=FAILED -d '{"repository":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_number":"'"$CIRCLE_BUILD_NUM"'","build_url":"'"$CIRCLE_BUILD_URL"'"}' -H "Content-Type: application/json" -X POST -i || true

version: 2.1
jobs:
  webhook-completed:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - run:
          name: Webhook completed
          command: |
              curl $BUILD_STATUS_URL\?flow\=circleci-completed -d '{"repository":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"${CIRCLE_BRANCH:-${CIRCLE_TAG/-/\/}}"'","build_number":"'"$CIRCLE_PREVIOUS_BUILD_NUM"'","build_url":"'"$CIRCLE_BUILD_URL"'"}' -H "Content-Type: application/json" -X POST -i || true
  build:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - run:
          <<: *webhook-created
      - checkout
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn test
      - run: yarn build
      - run:
          <<: *webhook-failed
  code-analytics:
    docker:
      - image: circleci/node:10-browsers
    environment:
      TZ: "/usr/share/zoneinfo/Europe/Vienna"
    steps:
      - run:
          <<: *webhook-created
      - checkout
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn sonarqube
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run:
          <<: *webhook-failed
  dependency-updates:
    docker:
      - image: circleci/node:10-browsers
    environment:
      TZ: "/usr/share/zoneinfo/Europe/Vienna"
    steps:
      - run:
          <<: *webhook-created
      - checkout
      - run: yarn add --dev ndc
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn ndc --stats --export $BUILD_STATUS_URL\?flow\=depsNdc\&repositoryName\=$CIRCLE_PROJECT_REPONAME\&repositoryBranch\=$CIRCLE_BRANCH\&buildNumber\=$CIRCLE_BUILD_NUM
      - run:
          <<: *webhook-failed
  release-major:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - run:
          <<: *webhook-created
      - add_ssh_keys:
          fingerprints:
            - "1a:f6:58:1d:a6:ba:b3:b6:6e:37:69:b7:96:3c:e1:f9"
      - checkout
      - run: yarn cleanup-release
      - run: git config --local user.email "ci@leftshift.one" && git config --local user.name "Continuous Integration"
      - run: git checkout master && git pull --tags
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn test
      - run: npm set registry https://registry.npmjs.org/
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN\n" > .npmrc
      - run: npm run release:major
      - run: npm run doc
      - run:
          <<: *webhook-failed
  release-minor:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - run:
          <<: *webhook-created
      - add_ssh_keys:
          fingerprints:
            - "1a:f6:58:1d:a6:ba:b3:b6:6e:37:69:b7:96:3c:e1:f9"
      - checkout
      - run: yarn cleanup-release
      - run: git config --local user.email "ci@leftshift.one" && git config --local user.name "Continuous Integration"
      - run: git checkout master && git pull --tags
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn test
      - run: npm set registry https://registry.npmjs.org/
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run: npm run release:minor
      - run: npm run doc
      - run:
          <<: *webhook-failed
  release-patch:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - run:
          <<: *webhook-created
      - add_ssh_keys:
          fingerprints:
            - "1a:f6:58:1d:a6:ba:b3:b6:6e:37:69:b7:96:3c:e1:f9"
      - checkout
      - run: yarn cleanup-release
      - run: git config --local user.email "ci@leftshift.one" && git config --local user.name "Continuous Integration"
      - run: git checkout ${CIRCLE_TAG/-/\/}
      - restore_cache:
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: cache-node-{{ checksum "package.json" }}
      - run: yarn test
      - run: npm set registry https://registry.npmjs.org/
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run: npm run release:patch
      - run: npm run doc
      - run:
          <<: *webhook-failed

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - webhook-completed:
          filters:
            tags:
              ignore: /.*/
          requires:
            - build
  release-major:
    jobs:
      - release-major:
          context: npm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-major$/
      - webhook-completed:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-major$/
          requires:
            - release-major
  release-minor:
    jobs:
      - release-minor:
          context: npm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-minor$/
      - webhook-completed:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-minor$/
          requires:
            - release-minor
  release-patch:
    jobs:
      - release-patch:
          context: npm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-\d+\.\d+\.x$/
      - webhook-completed:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-\d+\.\d+\.x$/
          requires:
            - release-patch
  code-analytics:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - code-analytics:
          context: leftshiftone-sonar
      - webhook-completed:
          requires:
            - code-analytics
  dependency-updates:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - dependency-updates:
          context: leftshiftone-sonar
      - webhook-completed:
          requires:
            - dependency-updates
